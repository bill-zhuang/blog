mysql 5.1 manual

chapter 3
1. mysql -h host -u user -p -P port db_name //登录指定默认数据库为 db_name
   mysql -h host -u user -p -P port db_name < script_name [> result.txt]
   //执行 script_name 脚本输出结果(如果加了 > result.txt 则将结果写入到txt文件中)
2. select version(), current_date, now();
3. 输入\c 取消当前输入的命令，不执行(可能需要'或者"，输入输入\c是在字符串输入一部分情况下)
4. show databases;
   select database(); //获取当前数据库名
   use db_name;
   create database db_name;
   show tables;
   create table table_name (
		id int(10) unsigned not null auto_increment,
		name varchar(100) default '' not null,
		....
		primary key (id)
	);
	desc/describe table_name;
	
	load data local infile '.../data.txt' into table table_name[ lines terminated by '\r\n'];
	insert into table_name values (.., ..,)[, (...), (...)]; //必须是完整的一条记录
	insert into table_name (filed, ....) values (....)[, (...)]; //
	
	select [distinct] */... from ... [where ...] [order by ... [desc/asc]] //desc,asc只作用于它前面的列名!!!
	select .... from ... where [not] regexp '^b';
	
	year(...) month(...) 
	right(str, num) 取str最右边num个字符
	mod(a, b) a % b
	比较 null 用 is null/ is not null, != null无效
	like '%x'  //_匹配单个字符 %匹配任意数目字符(含零个)
	concat(a, b)[ + 0] //连接a, b，后面的 + 0 为是结果变为一个数字

chapter 4

chapter 5
1. show engines; //显示所有支持的存储引擎
   show variables like '...%';
2. grant all/select/update... privileges on db_name.[*/table_name] to user_name@'ip_addr' [identified by 'password' with grant option];
   insert into user (Host, User, Password) values ('localhost', 'test', password('pass'));
   flush privileges; //修改权限立即生效(针对insert into user 操作，grant 不需要)
   insert 操作中密码要加 password 函数， grant 不需要

chapter 6

chapter 7
1. explain table_name 等同于 describe table_name/ show columns from table_name 测试所需时间比用后面两个语句多
2. explain select_sentense
   analyze table_name //在装载数据后运行，优化查询
   select 优化详见 高性能mysql
   
   LIMIT 0将总是快速返回一个空集合，用于检查查询的有效性
3. insert 速度
   1. 同一客户端插入多行，使用多个 values 的 insert 语句插入，比单行快 
		设置 bulk_insert_buffer_size 的值大些，可以一次插入更多数据
   2. 从不同客户端插入，使用 insert delayed(myisam, 不适用于 innodb)
   3. 通过 load data infile, 一般比 insert 快上20倍
   4. lock tables table_name write; 
   insert into .....; 
   insert into ...., 
   unlock tables; 锁表可以加速多个 insert 操作
   5. 事务表
   使用 begin, commit 来代替 lock tables
   6. insert 前 disable keys, insert 后 enable keys (适用于myisam，innodb不行)
4. delete 速度
   删除表内所有行，用 truncate table table_name, 而不是 delete from table_name
5. 数据库结构优化
   尽可能地使用最有效(最小)的数据类型
   如果可能，声明列为NOT NULL
   主索引应该尽可能短
   只创建确实需要的索引

chapter 8
1. 垂直显示查询结果  select .... \G //\G来垂直显示查询

chapter 9
1. cast (0x11.... as unsigned), hex('...') b'value'//bit
2. set @var_name := value [, @var_name = value];
3. 注释 # /**/  -- //--后需跟空格或者tab键或换行符等

chapter 10
1. create/alter database db_name [charset/character set charset_name [collate collate_name]]
   create/alter table_name (
   .....
   .....) [charset/character set charset_name [collate collate_name]]
2. set names 'charset_name' //显示客户端发送的sql语句字符集及返回结果的字符集
3. convert(exprt using transcoding_name)
4. cast
5. show full columns from table_name //增加显示 collation, privileges, comment，其他与不带 full 一样

chapter 11
1. bit/bool/tinyint/smallint/mediumint/int/integer/bigint/float/double/decimal
2. date/datetime/timestamp/time/year
3. char/varchar/text/enum/set
   char length <=255 删除CHAR值的尾部空格
   varchar length < 65535, when use charset utf8, lenght < (65535 -2 ??)/3 =21845 ???
   最大有效长度是65,532字节 不删除VARCHAR值的尾部空格
   ENUM列最多可以有65,535个截然不同的值。ENUM值在内部用整数表示
   SET列最多可以有64个成员

chapter 12
1.  COALESCE(value,...) 
返回值为列表当中的第一个非 NULL值，在没有非NULL 值得情况下返回值为 NULL 
2. GREATEST(value1,value2,...) 
3. ISNULL(expr) 
4.  LEAST(value1,value2,...) 
5. case value
   when compare-value1 then ....
   when compare-value2 then ....
   ..........
   else ....
end

case 
	when condition1 then ...
	when condition2 then ...
	.....
	else ...
end
6. IF(expr1,expr2,expr3) 
如果 expr1 是TRUE (expr1 <> 0 and expr1 <> NULL)，返回 expr2; 否则返回 expr3
7. IFNULL(expr1,expr2) 
如果expr1 不为 NULL，返回 expr1; 否则返回 expr2
8. NULLIF(expr1,expr2) 
如果expr1 = expr2 成立，返回NULL，否则返回 expr1
9. CONCAT(str1,str2,...) 返回连接参数产生的字符串
10. CONCAT_WS(separator,str1,str2,...) CONCAT With Separator   
第一个参数是其它参数的分隔符。分隔符的位置放在要连接的两个字符串之间。
11. LEFT(str,len) 返回从字符串str 开始的len 最左字符
12. LTRIM(str) 
13. RIGHT(str,len) 从字符串str 开始，返回最右len 字符
14. SUBSTRING/SUBSTR
15. TRIM
16. UCASE()/UPPER()
17. STRCMP(expr1,expr2)
18. / 和 div 前者除法，得到小数，后者整除
19. CRC32(expr) 计算循环冗余码校验值
20. date_add/date_sub(date, interval expr day/month/year...)
21. addtime(expr, expr2)
22. curdate()/current_date(); current_time()/curtime()

chapter 13
