php

1. htmlspecialchars函数
将特殊字元转成HTML的字串格式
如：& 转成 &amp; " 转成 &quot; < 转成 &lt; > 转成 &gt; 
2. strip_tags函数将html去标签，结合上面的htmlspecialchars(防止将<>误删)来实现去除html标签
3. self 和 this
4. ==操作符， 如'1234.'和数字1234比较 会返回true， 因为含数字字符串会把字符串转化为数字
5. 插入mysql表中数据乱码情况解决方案：
setlocale(LC_ALL, 'zh_CN'); <----设置在文件开头
$data = iconv('gb2312//IGNORE', 'utf-8', $data); <----转换gb2312到utf8格式(如果乱码字符是关闭gb2312)
6. list($one, $two, $three) = array(1, 2, 3); //$one = 1, $two = 2, $three = 3. 
ps：数组的key必须从0开始连续的数字(0,1,2..)，不能是字符串
7. mb_strlen, mb_substr...
8. argc & argv
在命令行下，比如：php script.php arg1 arg2
那么argc的值是3(argc永远大于等于1)，argv为argv[0]=script.php argv[1]=arg1 argv[2]=arg2
9. lcg_value()函数，产生0-1之间随机数
10. 判断输入是否为整数，用is_numeric()函数，is_int()会返回false(如果输入的为字符串数字，如'123')
11. session & cookie 区别
session 存在于服务器端，而cookie 存在于客户端；从安全性上说，session比较安全，cookie可以修改伪装
12. 获取明天是第几天 ：date('Y-m-d', strtotime(date('Y-m-d') . ' +1 day'))
13. class test{}
	$a = new test();
	$b = $a;  <-----a,b指向同一个对象
	$c = clone $a;  <-----a,c不指向同一对象

$a = array(1);
$b = $a;  <-----a,b不指向同一个数组
14. 数据库操作
$connect = mysql_connect($host, $user, $password) or die('...');
mysql_select_db($database_name);
$query_result = mysql_query($select) or die('...');
while($line = mysql_fetch_array($query_result))
{
	//...
}
mysql_free_result($query_result);
mysql_close($connect); 
15. 获取相似度：similar_text($cmp_name, $str_name, $percent) $percent:0-100之间
16. sprintf
17. 发送请求
public function sendRequest($url, $post_data, $method = 'post')
{
	$postdata = http_build_query($post_data);
	$options = array(
		'http' => array(
				'method' => $method, //post or get
				'header' => 'Content-type:application/x-www-form-urlencoded',
				'content' => $postdata,
				'timeout' => 15 * 60 // 超时时间（单位:s）
		)
	);
	$context = stream_context_create($options);
	return file_get_contents($url, false, $context);
}
18. echo & print
echo和print都不是函数，而是语言结构
echo 可以使用逗号隔开字符串输出，print 不行
字符串连接符 '.' 都可以，相比之下，在echo语句中使用逗号分隔字符串能改善性能
19. 正则表达式中插入变量的方法
参考url：http://stackoverflow.com/questions/1400768/using-variables-in-preg-replace-in-php
	1. $regex = '/part of regex' . $variable_want_to_insert . 'the other part of regex/';
	2. 未安全起见，使用preg_quote函数来处理要加入的变量，$regex = '/part of regex' . preg_quote($variable_want_to_insert) . 'the other part of regex/';
	3. 用双引号包含变量，$regex = "/part of regex{$variable_want_to_insert}the other part of regex/";
20. 读取文件用filesize函数的时候一直是同一个数，原因是缓存造成的，解决方法：在用filesize之前，调用clearstatcache();即可
21. strtotime('1970-01-01')返回负值，要得到0，改为strtotime('1970-01-01 UTC')即可
22. 杂
    对于用户在HTML中提交的输入值，需要用isset()来检测是否已被初始化
	str_replace()比preg_replace()快，但strtr()比str_replace()还要快上4倍？
	字符串大小写转换
	不要使用php的strtolower()函数来进行字符串的大小写转换，这在安装费中文系统的服务器下会导致将汉字转换为乱码。
	请使用strtr($string, 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', 'abcdefghijklmnopqrstuvwxyz')来进行大小写转换
	通过fopen()打开，flock()锁定，fwrite()写入，fclose()关闭，实现对文件的写操作
	目录权限
	创建/修改目录，需设置正确的权限，必须先使用umask(0000)，然后再mkdir()或者chmod()，如
	if (!is_dir($dir))
	{
		umask(0000);
		mkdir($dir, 0777);
	}
	if (!is_writeable($dir))
	{
		umask(0000);
		chmod($dir, 0777);
	}
23. 生成 unique id : uniqid(rand()/..., true)
24. 上传大大文件 php.ini设置 : upload_max_filesize, post_max_size 两个参数
25. 图片格式转化：以png转jpg为例：
    imagejpeg(imagecreatefromstring(file_get_contents($png_path)), "output.jpg");
26. $_SERVER['HTTP_HOST'] return port(if contain), use $_SERVER['SERVER_NAME'] instead
27. 读取doc文件(只支持windows，linux不支持)，
	在php.ini中
	1.注释 com.allow_dcom = true
	2.加入以下内容 //确保php安装目录下ext文件夹内容有php_com_dotnet.dll存在
	[COM_DOT_NET] 
	extension=php_com_dotnet.dll
	
	//linux 下doc转txt
	git clone http://www.wagner.pp.ru/git/oss/catdoc.git //查看INSTALL文件，安装信息
	cd catdoc
	./configure
	make
	make install
	安装后 catdoc [-s source_charset -d dest_charset -u] source.doc > dest.txt //即得到doc转为txt文本内容，注意内容可能有丢失
	
	reference url:http://www.wagner.pp.ru/~vitus/software/catdoc/
28. number_format($val, 2, '.', '') //保留两位小数，即使是两位小数都是00
29. unlink 文件，如果失败，检查如下原因：1.文件是否有权限，常见于linux环境 2. 文件打开后有没有关闭(fopen 后 fclose)
30. php上传文件数限制，在php.ini中修改max_file_uploads的值
31. mb_substr('string', 0, 40, 'utf-8') //注意最后加utf-8，否则中文会乱码
32. php -a //交互运行php
	php -i //掉用phpinfo()函数，并打印出结果
	php -f //file，可省略，运行php文件
33. for/foreach循环中try/catch语句中的变量还是会保留
	for ($i = 0; $i < 10; $i++) {
		try {
			if ($i % 2 == 0) {
				$test = $i;
			} else {
				throw new Exception('test');
			}
		} catch (Exception $e) {
			;
		}
		echo $test . PHP_EOL;
	}

Array
1. ksort函数
对数组的key排序(升序排列)，有排序参数可以设置
2. array_chunk(array, length, opt)
分割数据, 第三个参数为是否保留原数组中的key值。
3. end函数 
取数组最后一个主键或值，对非数字主键也有效
4. array_keys函数
获取数组主键，对非数字主键也有效。ps：返回值为ke=>value的数组
5. 去除数组中重复的value
-->一维数组使用array_unique函数
-->多维数组通过下面方法
$input = array_map("unserialize", array_unique(array_map("serialize", $input)));
建议在此后用array_values()去掉数组下标
6. array_merge和 + 区别
array_merge:：key为数字时不合并数据，非数字时合并，合并的value为第二个数组key的value，但是对key是数字的会重组！！，相当于对key数字的部分做了array_values()操作；
+：对数字和非数字都合并数据，key相同的，+后右边的数据字舍弃。
7. array_walk($array, $callback)  
等价于 foreach($array as $key =>$value){ $callback($value, $key); }
8. array_filter($array, [$callback]) //过滤$array value等值false的项
   与array_values的区别是后者只过滤被unset掉的key，对于没有unset的，但是value==false的不会过滤掉
9. unset 可以 unset 多个数组key， 如unset($example_arr['key'], $example_arr['key1'], ...)
10. array_map //使用array_map来调用类方法的时候，
	如果是静态方法，为array_map(array('class_name', 'static_method_name'), $arr)
	如果非静态方法，则为array_map(array($instance, 'method_name'), $arr)
	如果是在一个类中调用静态或者非静态方法，可以为array_map(array($this, 'method_name'), $arr)
11. in_array($val, $arr) 判断某个值是否在数组中，时间复杂度为O(n)，建议用isset/array_key_exists 
    url:http://stackoverflow.com/questions/2473989/list-of-big-o-for-php-functions
