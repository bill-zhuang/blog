javascript

1. html表单提交的是去element 的name属性，不是id
2. submit不能作为function名字，为javascript的保留字
3. Document.getElementsByName  ----> element有s
   Document.getElementById     ----> element没有s
4. javascript中方法不支持默认参数，解决方法为
function withDefaultParameter(a, /* optional */ b)
{
	if(typeof b === 'undefined') {
		b = default_value;
	}
	
	//or
	
	b = b || 'default_value';
	
	....
}
5. 在使用ajax中，如果要立即得到返回值，则需将属性async设置为false，默认值为true
6. css(cross site scripting，跨站脚本攻击，亦简写为xss)
如在输入框中输入信息，进入数据库前没有检查(如：在输入对话框中加入<script>window.location.href='http://www.example.com';alert('xss attack');</script>后跳转到相应网站，弹出对话框等)
更多详情参见url：https://www.owasp.org/index.php/Cross-site_Scripting_%28XSS%29
7. http build query in js
参考url：http://stackoverflow.com/questions/316781/how-to-build-query-string-with-javascript
	     http://stackoverflow.com/questions/1714786/querystring-encoding-of-a-javascript-object/1714899#1714899
		 http://stackoverflow.com/questions/9726315/jquery-build-http-query-string
function httpBuildQuery(query_array)
{
	var query_string = '';

	for (var key in query_array) {
		query_string += encodeURIComponent(key) + '=' + encodeURIComponent(query_array[key]) + '&';
	}

	if (query_string.length > 0) {
		query_string = '?' + query_string.substr(0, query_string.length - 1);
	}

	return query_string;
}
or
function httpBuildQuery(query_array)
{
	var query_string = [];

	for (var key in query_array) {
		if (query_array.hasOwnProperty(key)) {
		    query_string.push(encodeURIComponent(key) + '=' + encodeURIComponent(query_array[key]));
		}
	}

	return query_string.join('&');
}
or in jquery
return $.param(build_array);
8. js 隔断时间允许程序
	setInterval(function(){//to do...}, seconds * 1000); //时间间隔默认是毫秒级别，所以按秒的话要乘以1000
9. 获取今天日期
function getCurrentDate()
{
	var today = new Date();
	var day = today.getDate();
	var month = today.getMonth() + 1; //January is 0!
	var year = today.getFullYear();

	if (day < 10) {
	    day = '0' + day;
	} 

	if (month < 10) {
	    month = '0' + month;
	} 

	return year + '-' + month + '-' + day;
}
10. 修改button显示的名字，用document.getElementById('...').innerHTML = 'new name';
11. 打印
	function printPage(data)
	{
		var print_window = window.open('', '_blank', 'height=900, width=700');
		print_window.document.write('<html><head><title></title>');
		//optional stylesheet //print_window.document.write('<link rel="stylesheet" href="main.css" type="text/css" />');
		print_window.document.write('</head><body>');
		print_window.document.write(data);
		print_window.document.write('</body></html>');
		print_window.print();
		print_window.close();
		
		return true;
	}
12. 接上面打印，打印的时候如果要打印div内容根据传入的数据变化，那么根据$('#id').html()拿到的内容一致不变，但是实际上是变了，需要点两次才能拿到，滞后性
网上看到方法说在改变值的时候加一句 $('#id').attr('defaultValue', 'xxx')，然后$('#id').html()拿到的是改变后的值，测试无效
参考url：http://www.willis-owen.co.uk/2012/04/jquery-changing-form-values-not-affecting-the-dom
根据jquery版本不同，相应的也不同
//before jQuery 1.6
$('#id').attr('defaultValue', 'this is the new value');
//after jQuery 1.5.2
$('#id').attr('value', 'this is the new value');
如果是设置label值
$('#id').text('xxx')
第二句还是不变
$('#id').attr('defaultValue', 'xxx');

最后还是建议打印的时候如果要变更内容的话，新建一个html文件，用php来输出需要打印的内容中的数据

