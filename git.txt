git 

关于patch，
生成多个commit之间的patch，假设开始和结束的commit id为commit_id_1，commit_id_4，
生成patch为 git format-patch commit_id-1..commit_id_4
常用的也有 git format-patch -n //n为数字，去最近前n个commit生成patch--->每个commit生成一个patch
如果想多个commit生成一个patch，加上--stdout，如
git format-patch -n --stdout > all.patch

应用patch
git am *.patch

在通过管道命令来应用的时候要加上 --stdout 参数
git format-patch --stdout commit_id-1..commit_id_4 | git am

在实际应用 git am 的时候，最好带上 -3 参数选项，如果不带的话，而且应用patch失败的情况下， -3 选项可以看到修改文件的冲突，没带的话，根本不知道哪边冲突了，即
上面的变成了git am -3 *.patch git / format-patch --stdout commit_id-1..commit_id_4 | git am -3
修改完冲突后git add 冲突的文件，不要git commit，然后git am --resolved即可。

如果要忽略该patch，git am --skip
如果要终止应用patch，git am --abort